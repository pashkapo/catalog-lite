openapi: "3.0.0"
info:
  version: 0.1.0
  title: Catalog.Lite
servers:
  - url: https://catalog-lite.herokuapp.com/api
paths:
  /firms:
    get:
      summary: Список фирм
      operationId: listFirms
      tags:
        - firms
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/firmsFilter'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Firms"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /firms/{id}:
    get:
      summary: Определенная фирма
      operationId: showPetById
      tags:
        - firms
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Firm"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /buildings:
    get:
      summary: Список зданий
      operationId: listBuildings
      tags:
        - buildings
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/count'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Buildings"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /ping:
    get:
      summary: Проверка api
      operationId: ping
      tags:
        - other
      responses:
        '200':
          description: ok
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  parameters:
    id:
      description: Идентификатор сущности
      in: path
      name: id
      required: true
      schema:
        type: integer
    page:
      description: Номер страницы
      in: query
      name: page
      schema:
        type: integer
        default: 1
    count:
      description: Количество элементов на странице
      in: query
      name: count
      schema:
        type: integer
        default: 50
    firmsFilter:
      description: Количество элементов на странице
      in: query
      name: filter
      schema:
        $ref: "#/components/schemas/FirmsFilter"
  schemas:
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    FirmsFilter:
      type: object
      properties:
        building_id:
          type: integer
          example: 1
        rubric_id:
          type: string
          example: 7
        in_radius:
          $ref: "#/components/schemas/InRadius"
    InRadius:
      type: object
      properties:
        point:
          $ref: "#/components/schemas/Location"
        radius:
          type: integer
          example: 2000000
          description: "Радиус в метрах"
    Location:
      type: object
      properties:
        long:
          type: number
          example: 167.561104
        lat:
          type: number
          example: 71.509529
    Firm:
      type: object
      required:
        - id
        - name
        - building
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        building:
          $ref: "#/components/schemas/Building"
    Firms:
      type: array
      items:
        $ref: "#/components/schemas/Firm"
    Building:
      type: object
      required:
        - id
        - country
        - city
        - street
        - house
        - location
      properties:
        id:
          type: integer
          example: 1
        country:
          type: string
          example: "Russia"
        city:
          type: string
          example: "Kemerovo"
        street:
          type: string
          example: "Serebryaniy bor"
        house:
          type: string
          example: "1а"
        location:
          $ref: "#/components/schemas/Location"
    Buildings:
      type: array
      items:
        $ref: "#/components/schemas/Building"